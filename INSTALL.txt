SURVOS INSTALLATION

1. Check to see if CUDA is installed, currently 11.3 and 11.6 are recommended. To
check your CUDA installation see the CUDA instructions at the bottom of this document.

2. Create a folder (on the Desktop for example) to download the survos2 installer.
The actual survos2 application will be installed in the miniconda environment later.

	$ mkdir survos2

Navigate to the folder created

	$ cd survos2

Download Survos2 using git clone

	$ git clone https://github.com/DiamondLightSource/SuRVoS2.git

Navigate into the Survos2 folder

	$ cd SuRVoS2


3. Make sure that either conda or python-pip (python version 3.8 is needed) is installed
If neither is available you can download and install them from here:

For python-pip (please install python 3.8):
	Download at: https://www.python.org/downloads/

For Conda:
	Download at: https://docs.conda.io/en/latest/miniconda.html


4. Create a new environment for survos2

If python-pip (python version 3.8) is used:

	$ python3 -m venv survos2_env

	Shared environmnent needed?
	$ python3 -m venv <system-location-that-is-accessible>/survos2_conda_env
	e.g.
	$ python3 -m venv /home/user/Documents/survos2_conda_env

and activate it:
	$ source survos2_conda_env/bin/activate
    or
	$ source <system-location-that-is-accessible>/survos2_conda_env/bin/activate

If conda is used:

	$ conda create --name survos2_conda_env python=3.8

	Shared environmnent needed?
	$ conda create --prefix <system-location-that-is-accessible>/survos2_conda_env python=3.8
	e.g.
	$ conda create --prefix /home/user/Documents/survos2_conda_env python=3.8

and activate it:

	$ conda activate survos2_conda_env
	or
	$ conda activate /home/user/Documents/survos2_conda_env


5. Perform the survos2 pip installs using:

Below depending on the CUDA version / No GPU support, some 'sed' commands have to be executed in Linux or
some get-content set-content commands in Windows
Their purpose is to replace text in the requirements.txt/requirements_windows.txt files to set it for the
appropriate CUDA version / No GPU support

E.g.
    $ sed -i 's|torch|torch==1.12.1+cu102|g' requirements.txt
replaces 'torch' with 'torch==1.12.1+cu102' in the requirements.txt file and similarly
    $ (get-content requirements_windows.txt) | %{$_ -replace "torch","torch==1.12.1+cu102"} | set-content requirements_windows.txt
does the same in windows

(LINUX)
  (No GPU support)
    $ python3 -m pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu
  (CUDA 10.2)
    $ sed -i 's|torchvision|torchvision==0.13.1+cu102|g' requirements.txt
    $ sed -i 's|torchio|placeholder1|g' requirements.txt
    $ sed -i 's|torchmetrics|placeholder2|g' requirements.txt
    $ sed -i 's|medicaltorch|placeholder3|g' requirements.txt
    $ sed -i 's|torch|torch==1.12.1+cu102|g' requirements.txt
    $ sed -i 's|placeholder1|torchio|g' requirements.txt
    $ sed -i 's|placeholder2|torchmetrics|g' requirements.txt
    $ sed -i 's|placeholder3|medicaltorch|g' requirements.txt
    $ python3 -m pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cu102
  (CUDA 11.3)
    $ sed -i 's|torchvision|torchvision==0.13.1+cu113|g' requirements.txt
    $ sed -i 's|torchio|placeholder1|g' requirements.txt
    $ sed -i 's|torchmetrics|placeholder2|g' requirements.txt
    $ sed -i 's|medicaltorch|placeholder3|g' requirements.txt
    $ sed -i 's|torch|torch==1.12.1+cu113|g' requirements.txt
    $ sed -i 's|placeholder1|torchio|g' requirements.txt
    $ sed -i 's|placeholder2|torchmetrics|g' requirements.txt
    $ sed -i 's|placeholder3|medicaltorch|g' requirements.txt
    $ python3 -m pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cu113
  (CUDA 11.6)
    $ sed -i 's|torchvision|torchvision==0.14.1+cu116|g' requirements.txt
    $ sed -i 's|torchio|placeholder1|g' requirements.txt
    $ sed -i 's|torchmetrics|placeholder2|g' requirements.txt
    $ sed -i 's|medicaltorch|placeholder3|g' requirements.txt
    $ sed -i 's|torch|torch==1.13.1+cu116|g' requirements.txt
    $ sed -i 's|placeholder1|torchio|g' requirements.txt
    $ sed -i 's|placeholder2|torchmetrics|g' requirements.txt
    $ sed -i 's|placeholder3|medicaltorch|g' requirements.txt
    $ python3 -m pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cu116
  (CUDA 11.7)
    $ python3 -m pip install -r requirements.txt
  (CUDA 11.8)
    $ python3 -m pip install -r requirements.txt --index-url https://download.pytorch.org/whl/cu118

(WINDOWS) (use Powershell for the get-content, set-content commands)
  (No GPU support)
    $ python3 -m pip install -r requirements_windows.txt --extra-index-url https://download.pytorch.org/whl/cpu
  (CUDA 10.2)
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchvision","torchvision==0.13.1+cu102"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchio","placeholder1"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchmetrics","placeholder2"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "medicaltorch","placeholder3"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torch","torch==1.12.1+cu102"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder1","torchio"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder2","torchmetrics"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder3","medicaltorch"} | set-content requirements_windows.txt
    $ python3 -m pip install -r requirements_windows.txt --extra-index-url https://download.pytorch.org/whl/cu102
  (CUDA 11.3)
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchvision","torchvision==0.13.1+cu113"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchio","placeholder1"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchmetrics","placeholder2"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "medicaltorch","placeholder3"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torch","torch==1.12.1+cu113"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder1","torchio"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder2","torchmetrics"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder3","medicaltorch"} | set-content requirements_windows.txt
    $ python3 -m pip install -r requirements_windows.txt --extra-index-url https://download.pytorch.org/whl/cu113
  (CUDA 11.6)
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchvision","torchvision==0.14.1+cu116"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchio","placeholder1"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torchmetrics","placeholder2"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "medicaltorch","placeholder3"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "torch","torch==1.13.1+cu116"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder1","torchio"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder2","torchmetrics"} | set-content requirements_windows.txt
    $ (get-content requirements_windows.txt) | %{$_ -replace "placeholder3","medicaltorch"} | set-content requirements_windows.txt
    $ python3 -m pip install -r requirements_windows.txt --extra-index-url https://download.pytorch.org/whl/cu116
  (CUDA 11.7)
    $ python3 -m pip install -r requirements_windows.txt
  (CUDA 11.8)
    $ python3 -m pip install -r requirements_windows.txt --index-url https://download.pytorch.org/whl/cu118


6. Build survos2 cython + cuda stuff:

	$ python3 ./survos2/improc/setup.py build_ext --inplace

7. Create a folder for the <survos2 workspace>
(For a central installation remember to make this somewhere that is readable to everyone)]
	
8. Edit settings.yaml file. Change the CHROOT to <survos2 workspace>.
	

9. Install SuRVoS plugin for Napari

	$ pip install -e .
	
	Installation should be completed.
	The '-e' will install in development mode.
	

10. Run SuRVoS by starting Napari

	$ napari

	Then select the Workspace (SuRVoS2) plugin from the Plugins menu.

--------------------------------------------------------------------------------------

CUDA INSTALLATION

Before the installation of SuRVoS, if GPU support is desired please check that either one of the
following CUDA versions is installed:

 * CUDA 10.2 (you can install it by following this link https://developer.nvidia.com/cuda-10.2-download-archive)
 * CUDA 11.3 (you can install it by following this link https://developer.nvidia.com/cuda-11-3-1-download-archive)
 * CUDA 11.6 (you can install it by following this https://developer.nvidia.com/cuda-11-6-2-download-archive)
 * CUDA 11.7 (you can install it by following this https://developer.nvidia.com/cuda-11-7-1-download-archive)
 * CUDA 11.8 (you can install it by following this https://developer.nvidia.com/cuda-11-8-0-download-archive)

To verify that one of the CUDA versions above is installed and available for use run the following command:

	$ nvcc --version

Additionally, you may also include the cuDNN library in your CUDA installation for improved performance
during the training and inference of neural networks.

You can download cuDNN from here https://developer.nvidia.com/rdp/cudnn-download
An installation guide on how to include it in your CUDA install can be found here
https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html

If once of the above CUDA versions is installed or if GPU support is not needed, please continue
with the SuRVoS 2 installation guide above.
